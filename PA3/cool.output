Nonterminals useless in grammar

    symbol
    boolean
    case_
    cases
    expressions
    error_msg


Terminals unused in grammar

    ELSE
    FI
    IF
    IN
    LET
    LOOP
    POOL
    THEN
    WHILE
    CASE
    ESAC
    OF
    DARROW
    NEW
    ISVOID
    STR_CONST
    INT_CONST
    BOOL_CONST
    NOT
    LE
    ERROR
    '.'
    '@'
    '~'
    '*'
    '/'
    '+'
    '-'
    '<'
    '='


State 18 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: class_list

    2 class_list: class
    3           | class_list class

    4 class: CLASS TYPEID '{' cool_feature_list '}' ';'
    5      | CLASS TYPEID INHERITS TYPEID '{' cool_feature_list '}' ';'

    6 cool_feature_list: ε
    7                  | cool_feature_list feature

    8 feature: OBJECTID ':' TYPEID ';'
    9        | OBJECTID ':' TYPEID ASSIGN expression ';'
   10        | OBJECTID '(' formals_list ')' ':' TYPEID '{' expression '}' ';'

   11 formals_list: ε
   12             | formal
   13             | formals_list formal

   14 formal: OBJECTID ':' TYPEID

   15 expression: OBJECTID ASSIGN expression
   16           | ε


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 10
    ')' (41) 10
    '*' (42)
    '+' (43)
    '-' (45)
    '.' (46)
    '/' (47)
    ':' (58) 8 9 10 14
    ';' (59) 4 5 8 9 10
    '<' (60)
    '=' (61)
    '@' (64)
    '{' (123) 4 5 10
    '}' (125) 4 5 10
    '~' (126)
    error (256)
    CLASS (258) 4 5
    ELSE (259)
    FI (260)
    IF (261)
    IN (262)
    INHERITS (263) 5
    LET (264)
    LOOP (265)
    POOL (266)
    THEN (267)
    WHILE (268)
    CASE (269)
    ESAC (270)
    OF (271)
    DARROW (272)
    NEW (273)
    ISVOID (274)
    STR_CONST <symbol> (275)
    INT_CONST <symbol> (276)
    BOOL_CONST <boolean> (277)
    TYPEID <symbol> (278) 4 5 8 9 10 14
    OBJECTID <symbol> (279) 8 9 10 14 15
    ASSIGN (280) 9 15
    NOT (281)
    LE (282)
    ERROR (283)


Nonterminals, with rules where they appear

    $accept (44)
        on left: 0
    program <program> (45)
        on left: 1
        on right: 0
    class_list <classes> (46)
        on left: 2 3
        on right: 1 3
    class <class_> (47)
        on left: 4 5
        on right: 2 3
    cool_feature_list <features> (48)
        on left: 6 7
        on right: 4 5 7
    feature <feature> (49)
        on left: 8 9 10
        on right: 7
    formals_list <formals> (50)
        on left: 11 12 13
        on right: 10 13
    formal <formal> (51)
        on left: 14
        on right: 12 13
    expression <expression> (52)
        on left: 15 16
        on right: 9 10 15


State 0

    0 $accept: • program $end

    CLASS  shift, and go to state 1

    program     go to state 2
    class_list  go to state 3
    class       go to state 4


State 1

    4 class: CLASS • TYPEID '{' cool_feature_list '}' ';'
    5      | CLASS • TYPEID INHERITS TYPEID '{' cool_feature_list '}' ';'

    TYPEID  shift, and go to state 5


State 2

    0 $accept: program • $end

    $end  shift, and go to state 6


State 3

    1 program: class_list •
    3 class_list: class_list • class

    CLASS  shift, and go to state 1

    $default  reduce using rule 1 (program)

    class  go to state 7


State 4

    2 class_list: class •

    $default  reduce using rule 2 (class_list)


State 5

    4 class: CLASS TYPEID • '{' cool_feature_list '}' ';'
    5      | CLASS TYPEID • INHERITS TYPEID '{' cool_feature_list '}' ';'

    INHERITS  shift, and go to state 8
    '{'       shift, and go to state 9


State 6

    0 $accept: program $end •

    $default  accept


State 7

    3 class_list: class_list class •

    $default  reduce using rule 3 (class_list)


State 8

    5 class: CLASS TYPEID INHERITS • TYPEID '{' cool_feature_list '}' ';'

    TYPEID  shift, and go to state 10


State 9

    4 class: CLASS TYPEID '{' • cool_feature_list '}' ';'

    $default  reduce using rule 6 (cool_feature_list)

    cool_feature_list  go to state 11


State 10

    5 class: CLASS TYPEID INHERITS TYPEID • '{' cool_feature_list '}' ';'

    '{'  shift, and go to state 12


State 11

    4 class: CLASS TYPEID '{' cool_feature_list • '}' ';'
    7 cool_feature_list: cool_feature_list • feature

    OBJECTID  shift, and go to state 13
    '}'       shift, and go to state 14

    feature  go to state 15


State 12

    5 class: CLASS TYPEID INHERITS TYPEID '{' • cool_feature_list '}' ';'

    $default  reduce using rule 6 (cool_feature_list)

    cool_feature_list  go to state 16


State 13

    8 feature: OBJECTID • ':' TYPEID ';'
    9        | OBJECTID • ':' TYPEID ASSIGN expression ';'
   10        | OBJECTID • '(' formals_list ')' ':' TYPEID '{' expression '}' ';'

    ':'  shift, and go to state 17
    '('  shift, and go to state 18


State 14

    4 class: CLASS TYPEID '{' cool_feature_list '}' • ';'

    ';'  shift, and go to state 19


State 15

    7 cool_feature_list: cool_feature_list feature •

    $default  reduce using rule 7 (cool_feature_list)


State 16

    5 class: CLASS TYPEID INHERITS TYPEID '{' cool_feature_list • '}' ';'
    7 cool_feature_list: cool_feature_list • feature

    OBJECTID  shift, and go to state 13
    '}'       shift, and go to state 20

    feature  go to state 15


State 17

    8 feature: OBJECTID ':' • TYPEID ';'
    9        | OBJECTID ':' • TYPEID ASSIGN expression ';'

    TYPEID  shift, and go to state 21


State 18

   10 feature: OBJECTID '(' • formals_list ')' ':' TYPEID '{' expression '}' ';'

    OBJECTID  shift, and go to state 22

    OBJECTID  [reduce using rule 11 (formals_list)]
    $default  reduce using rule 11 (formals_list)

    formals_list  go to state 23
    formal        go to state 24


State 19

    4 class: CLASS TYPEID '{' cool_feature_list '}' ';' •

    $default  reduce using rule 4 (class)


State 20

    5 class: CLASS TYPEID INHERITS TYPEID '{' cool_feature_list '}' • ';'

    ';'  shift, and go to state 25


State 21

    8 feature: OBJECTID ':' TYPEID • ';'
    9        | OBJECTID ':' TYPEID • ASSIGN expression ';'

    ASSIGN  shift, and go to state 26
    ';'     shift, and go to state 27


State 22

   14 formal: OBJECTID • ':' TYPEID

    ':'  shift, and go to state 28


State 23

   10 feature: OBJECTID '(' formals_list • ')' ':' TYPEID '{' expression '}' ';'
   13 formals_list: formals_list • formal

    OBJECTID  shift, and go to state 22
    ')'       shift, and go to state 29

    formal  go to state 30


State 24

   12 formals_list: formal •

    $default  reduce using rule 12 (formals_list)


State 25

    5 class: CLASS TYPEID INHERITS TYPEID '{' cool_feature_list '}' ';' •

    $default  reduce using rule 5 (class)


State 26

    9 feature: OBJECTID ':' TYPEID ASSIGN • expression ';'

    OBJECTID  shift, and go to state 31

    $default  reduce using rule 16 (expression)

    expression  go to state 32


State 27

    8 feature: OBJECTID ':' TYPEID ';' •

    $default  reduce using rule 8 (feature)


State 28

   14 formal: OBJECTID ':' • TYPEID

    TYPEID  shift, and go to state 33


State 29

   10 feature: OBJECTID '(' formals_list ')' • ':' TYPEID '{' expression '}' ';'

    ':'  shift, and go to state 34


State 30

   13 formals_list: formals_list formal •

    $default  reduce using rule 13 (formals_list)


State 31

   15 expression: OBJECTID • ASSIGN expression

    ASSIGN  shift, and go to state 35


State 32

    9 feature: OBJECTID ':' TYPEID ASSIGN expression • ';'

    ';'  shift, and go to state 36


State 33

   14 formal: OBJECTID ':' TYPEID •

    $default  reduce using rule 14 (formal)


State 34

   10 feature: OBJECTID '(' formals_list ')' ':' • TYPEID '{' expression '}' ';'

    TYPEID  shift, and go to state 37


State 35

   15 expression: OBJECTID ASSIGN • expression

    OBJECTID  shift, and go to state 31

    $default  reduce using rule 16 (expression)

    expression  go to state 38


State 36

    9 feature: OBJECTID ':' TYPEID ASSIGN expression ';' •

    $default  reduce using rule 9 (feature)


State 37

   10 feature: OBJECTID '(' formals_list ')' ':' TYPEID • '{' expression '}' ';'

    '{'  shift, and go to state 39


State 38

   15 expression: OBJECTID ASSIGN expression •

    $default  reduce using rule 15 (expression)


State 39

   10 feature: OBJECTID '(' formals_list ')' ':' TYPEID '{' • expression '}' ';'

    OBJECTID  shift, and go to state 31

    $default  reduce using rule 16 (expression)

    expression  go to state 40


State 40

   10 feature: OBJECTID '(' formals_list ')' ':' TYPEID '{' expression • '}' ';'

    '}'  shift, and go to state 41


State 41

   10 feature: OBJECTID '(' formals_list ')' ':' TYPEID '{' expression '}' • ';'

    ';'  shift, and go to state 42


State 42

   10 feature: OBJECTID '(' formals_list ')' ':' TYPEID '{' expression '}' ';' •

    $default  reduce using rule 10 (feature)
